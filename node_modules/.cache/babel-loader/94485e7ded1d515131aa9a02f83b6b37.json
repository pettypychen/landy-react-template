{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pettychen/physicle-clone/my-app/src/components/ContactForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Row, Col } from \"antd\";\nimport Zoom from \"react-reveal/Zoom\";\nimport Input from \"../../common/Input\";\nimport TextArea from \"../../common/TextArea\";\nimport Block from \"../Block\";\nimport Button from \"../../common/Button\";\nimport useForm from \"./useForm\";\nimport validate from \"./validationRules\";\nimport * as S from \"./styles\";\n\nconst Contact = ({\n  id,\n  title,\n  content\n}) => {\n  _s();\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useForm(validate);\n  return /*#__PURE__*/_jsxDEV(S.ContactContainer, {\n    id: id,\n    children: /*#__PURE__*/_jsxDEV(S.Contact, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 11,\n          sm: 24,\n          xs: 24,\n          children: /*#__PURE__*/_jsxDEV(Block, {\n            padding: true,\n            title: title,\n            content: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 12,\n          sm: 24,\n          xs: 24,\n          children: /*#__PURE__*/_jsxDEV(S.FormGroup, {\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                value: values.name || \"\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), errors.name ? /*#__PURE__*/_jsxDEV(Zoom, {\n                cascade: true,\n                children: /*#__PURE__*/_jsxDEV(S.Span, {\n                  children: \"Name is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(S.Span, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: values.email || \"\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), errors.email ? /*#__PURE__*/_jsxDEV(Zoom, {\n                cascade: true,\n                children: /*#__PURE__*/_jsxDEV(S.Span, {\n                  children: \"Email is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(S.Span, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                placeholder: \"Your Message\",\n                value: values.message || \"\",\n                name: \"message\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), errors.message ? /*#__PURE__*/_jsxDEV(Zoom, {\n                cascade: true,\n                children: /*#__PURE__*/_jsxDEV(S.Span, {\n                  children: \"Message is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(S.Span, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(S.ButtonContainer, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                name: \"submit\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"UIcc/KuS0wBm5lnWgdzNgedm0QA=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/pettychen/physicle-clone/my-app/src/components/ContactForm/index.js"],"names":["React","Row","Col","Zoom","Input","TextArea","Block","Button","useForm","validate","S","Contact","id","title","content","values","errors","handleChange","handleSubmit","name","email","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport Block from \"../Block\";\r\nimport Button from \"../../common/Button\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validationRules\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Contact = ({id, title, content}) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  return (\r\n    <S.ContactContainer id={id}>\r\n      <S.Contact>\r\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n          <Col lg={12} md={11} sm={24} xs={24}>\r\n            <Block\r\n              padding={true}\r\n              title={title}\r\n              content={content}\r\n            />\r\n          </Col>\r\n          <Col lg={12} md={12} sm={24} xs={24}>\r\n            <S.FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.name ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Name is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.email ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Email is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.message ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Message is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <S.ButtonContainer>\r\n                <Button name=\"submit\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </S.ButtonContainer>\r\n            </S.FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </S.Contact>\r\n    </S.ContactContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}