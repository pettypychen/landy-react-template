{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{Row,Col}from\"antd\";import Zoom from\"react-reveal/Zoom\";import Input from\"../../common/Input\";import TextArea from\"../../common/TextArea\";import Block from\"../Block\";import Button from\"../../common/Button\";import useForm from\"./useForm\";import validate from\"./validationRules\";import*as S from\"./styles\";var Contact=function Contact(_ref){var id=_ref.id,title=_ref.title,content=_ref.content;var _useForm=useForm(validate),values=_useForm.values,errors=_useForm.errors,handleChange=_useForm.handleChange,handleSubmit=_useForm.handleSubmit;return/*#__PURE__*/_jsx(S.ContactContainer,{id:id,children:/*#__PURE__*/_jsx(S.Contact,{children:/*#__PURE__*/_jsxs(Row,{type:\"flex\",justify:\"space-between\",align:\"middle\",children:[/*#__PURE__*/_jsx(Col,{lg:12,md:11,sm:24,xs:24,children:/*#__PURE__*/_jsx(Block,{padding:true,title:title,content:content})}),/*#__PURE__*/_jsx(Col,{lg:12,md:12,sm:24,xs:24,children:/*#__PURE__*/_jsxs(S.FormGroup,{autoComplete:\"off\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Col,{lg:24,md:24,sm:24,xs:24,children:[/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"name\",placeholder:\"Name\",value:values.name||\"\",onChange:handleChange}),errors.name?/*#__PURE__*/_jsx(Zoom,{cascade:true,children:/*#__PURE__*/_jsx(S.Span,{children:\"Name is required\"})}):/*#__PURE__*/_jsx(S.Span,{}),\" \"]}),/*#__PURE__*/_jsxs(Col,{lg:24,md:24,sm:24,xs:24,children:[/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"email\",placeholder:\"Email\",value:values.email||\"\",onChange:handleChange}),errors.email?/*#__PURE__*/_jsx(Zoom,{cascade:true,children:/*#__PURE__*/_jsx(S.Span,{children:\"Email is required\"})}):/*#__PURE__*/_jsx(S.Span,{}),\" \"]}),/*#__PURE__*/_jsxs(Col,{lg:24,md:24,sm:24,xs:24,children:[/*#__PURE__*/_jsx(TextArea,{placeholder:\"Your Message\",value:values.message||\"\",name:\"message\",onChange:handleChange}),errors.message?/*#__PURE__*/_jsx(Zoom,{cascade:true,children:/*#__PURE__*/_jsx(S.Span,{children:\"Message is required\"})}):/*#__PURE__*/_jsx(S.Span,{}),\" \"]}),/*#__PURE__*/_jsx(S.ButtonContainer,{children:/*#__PURE__*/_jsx(Button,{name:\"submit\",type:\"submit\",children:\"Submit\"})})]})})]})})});};export default Contact;","map":{"version":3,"sources":["/Users/pettychen/physicle-clone/src/components/ContactForm/index.js"],"names":["React","Row","Col","Zoom","Input","TextArea","Block","Button","useForm","validate","S","Contact","id","title","content","values","errors","handleChange","handleSubmit","name","email","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport Block from \"../Block\";\r\nimport Button from \"../../common/Button\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validationRules\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Contact = ({id, title, content}) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  return (\r\n    <S.ContactContainer id={id}>\r\n      <S.Contact>\r\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n          <Col lg={12} md={11} sm={24} xs={24}>\r\n            <Block\r\n              padding={true}\r\n              title={title}\r\n              content={content}\r\n            />\r\n          </Col>\r\n          <Col lg={12} md={12} sm={24} xs={24}>\r\n            <S.FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.name ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Name is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.email ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Email is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.message ? (\r\n                  <Zoom cascade>\r\n                    <S.Span>Message is required</S.Span>\r\n                  </Zoom>\r\n                ) : (\r\n                  <S.Span />\r\n                )}{\" \"}\r\n              </Col>\r\n              <S.ButtonContainer>\r\n                <Button name=\"submit\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </S.ButtonContainer>\r\n            </S.FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </S.Contact>\r\n    </S.ContactContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}